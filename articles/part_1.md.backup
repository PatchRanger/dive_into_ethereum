# Разрабатываем full-stack приложение на Ethereum (Часть 1) - разработка контракта

Хайп вокруг технологии **"blockchain"** растет с экспоненциалной скоростью. В этом можно убедиться, как пролистав ленты популярных новостных агенств или открыв Google Trends, так и посмотрев на курсы  криптовалют и капитализации отдельных компаний. Одновременно с этим для обычного пользователя вся эта шумиха продолжает оставаться чем-то загадочным и непонятным (что совершенно нормально!). Другое дело, что большинство разработчиков точно также упорно не понимают, о чем вся эта _цепочка блоков_ и есть ли от нее толк на практике?

В этом небольшом цикле статей я постараюсь продемонстрировать работу с технологией блокчейн на масимально приближенном к реальности примере: с помощью платформы Ethereum мы создадим приложение наподобие сайта-визитной карточки, в котором можно будет описать свои проекты, навыки, контакты и прочее. Для пущей сложности добавим к этому форму обратной связи, чтобы соискатели могли отправить вам сообщение. Тем самым мы получим полноценное динамическое приложение, расположенное внутри блокчейна и работающее в обычном браузере!

## Содержание

## Введение в Ethereum
Эта статья не расчитана на тех, кто совсем не знаком с Ethereum, поэтому объяснений базовых вещей вроде *блоков*, *транзакций* или *контрактов* здесь не будет. Вместо это я подразумеваю, что вы хотя бы чуть-чуть в теме. В противном случае прочитайте статьи из списка ниже, а потом возвращайтесь :)

- [RU - Пишем умный контракт на Solidity. Часть 1 — установка и «Hello world»](https://habrahabr.ru/post/312008/)
- [RU - Malware + Blockchain = ❤️](https://habrahabr.ru/post/313710/)
- [RU - Как мы делали первую сделку-аккредитив на блокчейн в Альфа-Банке](https://habrahabr.ru/company/alfa/blog/323070/)
- [EN - Building a smart contract using the command line](https://www.ethereum.org/greeter)
- [EN - Create your own crypto-currency](https://www.ethereum.org/token)
- [EN - Dapps for Beginners](https://dappsforbeginners.wordpress.com/)
- [EN - A 101 Noob Intro to Programming Smart Contracts on Ethereum](http://consensys.github.io/developers/articles/101-noob-intro/)
- [EN - Ethereum for web developers](https://medium.com/@mvmurthy/ethereum-for-web-developers-890be23d1d0c)

Больше ссылок на интересные статьи вы найдете в конце.

**P.S.** Я работаю под Ubuntu 16.04, так что весь процесс установки, разработки и деплоя будет описан под эту ОС. Тем не менее все используемые инструменты кроссплатформенны (не проверял :), так что при желании можете поэкспериментировать на других ОС.

## Настройка окружения

### Geth

Работа с Ethereum возможна через огромное число клиентов, часть из которых terminal-based, часть GUI и есть несколько гибридных решений. Своего рода стандартом является [Geth](https://ethereum.github.io/go-ethereum/), который разрабатывается самой командой Ethereum. Про него я уже писал в [предыдущих статьях](https://habrahabr.ru/post/312008/), но на всякий случай повторюсь.

Клиент написан на Go, устанавливается [стандартным способом](https://www.ethereum.org/cli):

```bash
sudo apt-get install software-properties-common
sudo add-apt-repository -y ppa:ethereum/ethereum
sudo apt-get update
sudo apt-get install ethereum
```

Сам Geth не имеет GUI, но работать с ним из терминала довольно приятно. [Здесь](https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options) описан весь набор аргументов командной строки, я же опишу несколько самых популярных.

### Parity

Тем не менее в последнее время все чаще можно встретить другой клиент -  Parity, написанный на Rust. Рост его популярности во многом обеспечил [баг в Geth](https://blog.ethereum.org/2016/11/25/security-alert-11242016-consensus-bug-geth-v1-4-19-v1-5-2/), связанный с реализацией алгоритма консенсуса. Ну а на деле главным отличием является встроенный web интерфейс. Установка:

``` bash
sudo <(curl https://get.parity.io -Lk)
```

### Mist

### Remix

### [Cosmo](https://github.com/cosmo-project/meteor-dapp-cosmo)

Это IDE для разработки умных контрактов. Штука удобная, написана на Meteor, работает из коробки. Для начала откройте новый терминал и запустите ноду с включенным RPC интерфесом `geth --rpc --rpcapi="db,eth,net,web3,personal" --rpcport "8545" --rpcaddr "127.0.0.1" --rpccorsdomain "localhost" console`.

```bash
$ git clone http://github.com/SilentCicero/meteor-dapp-cosmo.git
$ cd meteor-dapp-cosmo/app
$ meteor
```

Далее открываете [localhost:3000](localhost:3000) и видите следующую картину:

![cosmo_screenshot](https://habrastorage.org/files/247/343/d06/247343d0657844469f2bbc8932e4fa58.jpg)

Помимо подсветки синтаксиса есть еще такие удобные функции как:

## Solidity

## Примеры контрактов

## Создаем контракт-визитку

Самое время создать наш контракт. В конечном итоге это будет приложение-визитка, на которой можно будет найти информацию об авторе, а именно:

- Образование
- Список проектов
- Навыки
- Контакты

И форма обратной связи для соискателей.

## Создаем простой интерфейс

## Ссылки

- [](http://consensys.github.io/developers/articles/101-noob-intro/)
- [](https://medium.com/metamask/metamask-ff7d3571f331)
- [](https://medium.com/metamask/metamask-3-migration-guide-914b79533cdd)
- [](https://karl.tech/learning-solidity-part-1-deploy-a-contract/)
- [](https://www.cryptocompare.com/wallets/guides/how-to-use-metamask/)
- [](https://medium.com/@mustwin/building-an-oracle-for-an-ethereum-contract-6096d3e39551)
- [](https://medium.com/@mvmurthy/full-stack-hello-world-voting-ethereum-dapp-tutorial-part-1-40d2d0d807c2)
- [](https://medium.com/@mvmurthy/full-stack-hello-world-voting-ethereum-dapp-tutorial-part-2-30b3d335aa1f)